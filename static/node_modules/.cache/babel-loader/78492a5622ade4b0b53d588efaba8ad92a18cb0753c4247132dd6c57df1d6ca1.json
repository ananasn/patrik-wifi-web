{"ast":null,"code":"import axios from \"axios\";\nimport SimpleKeyboard from \"./SimpleKeyboard\";\nimport \"./App.css\";\nexport default {\n  name: \"App\",\n  components: {\n    SimpleKeyboard\n  },\n  data: () => ({\n    input: \"\",\n    ssid: \"\",\n    message: \"\",\n    options: []\n  }),\n  mounted: function () {\n    this.loadSSID();\n  },\n  methods: {\n    connect: function (ssid, password) {\n      axios.post(\"http://localhost:8888/connect/\", {\n        ssid: ssid,\n        password: password\n      }).then(response => {\n        this.message = \"nya\";\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    greet(event) {\n      // `this` inside methods points to the current active instance\n      alert(`Hello ${this.name}!`);\n      // `event` is the native DOM event\n      if (event) {\n        alert(event.target.tagName);\n      }\n    },\n    loadSSID: function () {\n      axios.get(\"http://localhost:8888/ssid/\").then(response => {\n        this.options = response.data;\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    onChange(input) {\n      this.input = input;\n    },\n    onKeyPress(button) {\n      if (button === \"{enter}\") {\n        if (this.ssid && this.input) {\n          this.connect(this.ssid, this.input);\n          this.message = \"\";\n        } else {\n          this.message = \"Не выбрана сеть и/или не введён пароль\";\n        }\n      }\n    },\n    onInputChange(input) {\n      this.input = input.target.value;\n    }\n  }\n};","map":{"version":3,"names":["axios","SimpleKeyboard","name","components","data","input","ssid","message","options","mounted","loadSSID","methods","connect","password","post","then","response","console","log","catch","error","greet","event","alert","target","tagName","get","onChange","onKeyPress","button","onInputChange","value"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    \n    <div class=\"flex-container\">\n      <select v-model=\"ssid\" class=\"custom-select\">\n        <option value=\"\" disabled selected hidden>Выберите сеть</option>\n        <option \n          v-for=\"option in options\"\n          v-bind:key=\"option.value\"\n          :value=\"option.text\"\n        >\n          {{ option.text }}\n        </option>\n      </select>\n\n      <button @click=\"greet\">⟳</button>\n    </div>\n\n    <input\n      :value=\"input\"\n      class=\"input\"\n      @input=\"onInputChange\"\n      type=\"password\"\n      placeholder=\"Введите пароль от Wi-Fi сети\"\n    >\n    <SimpleKeyboard \n      @onChange=\"onChange\" \n      @onKeyPress=\"onKeyPress\" \n      :input=\"input\"\n    />\n\n    <div class=\"alert\"> {{ message }} </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nimport SimpleKeyboard from \"./SimpleKeyboard\"\nimport \"./App.css\"\n\nexport default {\n  name: \"App\",\n  components: {\n    SimpleKeyboard\n  },\n  data: () => ({\n    input: \"\",\n    ssid: \"\",\n    message: \"\",\n    options: []\n\n  }),\n  mounted: function() {\n    this.loadSSID();\n  },\n  methods: {\n    connect: function(ssid, password) {\n      axios.post(\"http://localhost:8888/connect/\", { \n        ssid: ssid, \n        password: password\n      })\n      .then(response => {\n        this.message = \"nya\"\n        console.log(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    },\n    greet(event) {\n      // `this` inside methods points to the current active instance\n      alert(`Hello ${this.name}!`)\n      // `event` is the native DOM event\n      if (event) {\n        alert(event.target.tagName)\n      }\n    },\n    loadSSID: function() {\n      axios.get(\"http://localhost:8888/ssid/\")\n      .then(response => {\n        this.options = response.data\n        console.log(response.data)\n      })\n      .catch(error => {\n        console.error(error)\n      })\n    },\n    onChange(input) {\n      this.input = input\n    },\n    onKeyPress(button) {\n      if (button === \"{enter}\"){\n        if (this.ssid && this.input) {\n          this.connect(this.ssid, this.input)\n          this.message = \"\"\n        } else {\n          this.message = \"Не выбрана сеть и/или не введён пароль\"\n        }\n      }\n    },\n    onInputChange(input) {\n      this.input = input.target.value\n    }\n  }\n};\n</script>\n"],"mappings":"AAoCA,OAAAA,KAAA;AAEA,OAAAC,cAAA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,IAAA,EAAAA,CAAA;IACAC,KAAA;IACAC,IAAA;IACAC,OAAA;IACAC,OAAA;EAEA;EACAC,OAAA,WAAAA,CAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAC,OAAA,WAAAA,CAAAN,IAAA,EAAAO,QAAA;MACAb,KAAA,CAAAc,IAAA;QACAR,IAAA,EAAAA,IAAA;QACAO,QAAA,EAAAA;MACA,GACAE,IAAA,CAAAC,QAAA;QACA,KAAAT,OAAA;QACAU,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAZ,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;MACA;IACA;IACAC,MAAAC,KAAA;MACA;MACAC,KAAA,eAAArB,IAAA;MACA;MACA,IAAAoB,KAAA;QACAC,KAAA,CAAAD,KAAA,CAAAE,MAAA,CAAAC,OAAA;MACA;IACA;IACAf,QAAA,WAAAA,CAAA;MACAV,KAAA,CAAA0B,GAAA,gCACAX,IAAA,CAAAC,QAAA;QACA,KAAAR,OAAA,GAAAQ,QAAA,CAAAZ,IAAA;QACAa,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAZ,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;MACA;IACA;IACAO,SAAAtB,KAAA;MACA,KAAAA,KAAA,GAAAA,KAAA;IACA;IACAuB,WAAAC,MAAA;MACA,IAAAA,MAAA;QACA,SAAAvB,IAAA,SAAAD,KAAA;UACA,KAAAO,OAAA,MAAAN,IAAA,OAAAD,KAAA;UACA,KAAAE,OAAA;QACA;UACA,KAAAA,OAAA;QACA;MACA;IACA;IACAuB,cAAAzB,KAAA;MACA,KAAAA,KAAA,GAAAA,KAAA,CAAAmB,MAAA,CAAAO,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}